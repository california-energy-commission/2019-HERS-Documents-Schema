version: 2
jobs:
  CBECCresXMLterm:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Find empty CBECCresXMLterm text
          command: |
            cd tools
            sh ./cbeccresxmlterm-check.sh || exit 1


  displayterms:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Find empty displayterm text
          command: |
            cd tools
            sh ./displayterm-check.sh || exit 1


  well-formedness:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt update
            sudo apt install libxml2-utils
      - run:
          name: Original XML Schema - Check Well Formedness
          command: |
            cd tools
            sh ./well-formedness-schema.sh || exit 1

      - run:
          name: Deployed XML Schema - Check Well Formedness
          command: |
            cd tools
            sh ./well-formedness-deployed-schema.sh || exit 1

  shellcheck:
    docker:
      - image: nlknguyen/alpine-shellcheck:v0.4.6
    steps:
      - checkout
      - run:
          name: Check Scripts
          command: |
            find . -type f -name '*.sh' | wc -l
            find . -type f -name '*.sh' | xargs shellcheck --external-sources

  ruby-lint:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.5.3-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: run lint
          command: |
            bundle exec rubocop

  built-in-datatypes:
    docker:
      - image: circleci/ruby:2.5.3-node-browsers

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Check for correct XML schema built in datatypes
          command: |
            cd tools
            bundle exec ruby built_in_datatypes.rb -p ../schema || exit 1

  missing-base-types:
    docker:
      - image: circleci/ruby:2.5.3-node-browsers

    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Check for missing base elements
          command: |
            cd tools
            bundle exec ruby missing_base_elements.rb -p ../schema || exit 1

  missing-namespace:
    docker:
      - image: circleci/ruby:2.5.3-node-browsers

    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Check for missing namespace declarations
          command: |
            cd tools
            bundle exec ruby namespace_prefixes.rb -p ../schema || exit 1

  missing-restriction:
    docker:
      - image: circleci/ruby:2.5.3-node-browsers

    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Check for missing xsd:enumerations in the xsd:restrictions
          command: |
            cd tools
            bundle exec ruby restriction.rb -p ../schema || exit 1


workflows:
  version: 2
  build:
    jobs:
      - CBECCresXMLterm
      - displayterms
      - well-formedness
      - shellcheck
      - ruby-lint
      - missing-base-types
      - built-in-datatypes
      - missing-namespace
      - missing-restriction
